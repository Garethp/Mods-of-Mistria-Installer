//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Garethp.ModsOfMistriaGUI.Lang {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Garethp.ModsOfMistriaGUI.Lang.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods Of Mistria Installer.
        /// </summary>
        public static string ApplicationTitle {
            get {
                return ResourceManager.GetString("ApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mods folder has been detected, but one can be created automatically for you..
        /// </summary>
        public static string CanCreateModsFolder {
            get {
                return ResourceManager.GetString("CanCreateModsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find Fields of Mistria location. Try placing this in the same folder as Fields of Mistria..
        /// </summary>
        public static string CouldNotFindMistria {
            get {
                return ResourceManager.GetString("CouldNotFindMistria", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a mods folder. Try creating a folder called &apos;mods&apos; in the Fields of Mistria folder..
        /// </summary>
        public static string CouldNotFindMods {
            get {
                return ResourceManager.GetString("CouldNotFindMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable All Mods.
        /// </summary>
        public static string DisableAllMods {
            get {
                return ResourceManager.GetString("DisableAllMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable All Mods.
        /// </summary>
        public static string EnableAllMods {
            get {
                return ResourceManager.GetString("EnableAllMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of Mistria has been detected at: .
        /// </summary>
        public static string FieldsOfMistriaDetectedLocation {
            get {
                return ResourceManager.GetString("FieldsOfMistriaDetectedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the Mods of Mistria Installer!.
        /// </summary>
        public static string GreetingText {
            get {
                return ResourceManager.GetString("GreetingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reload mod list..
        /// </summary>
        public static string GUIReloadModlist {
            get {
                return ResourceManager.GetString("GUIReloadModlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string InstallButtonText {
            get {
                return ResourceManager.GetString("InstallButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing mods....
        /// </summary>
        public static string InstallInProgress {
            get {
                return ResourceManager.GetString("InstallInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} by {1}.
        /// </summary>
        public static string ModByAuthor {
            get {
                return ResourceManager.GetString("ModByAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod has errors and will not install.
        /// </summary>
        public static string ModHasErrors {
            get {
                return ResourceManager.GetString("ModHasErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod has warnings that can be ignored.
        /// </summary>
        public static string ModHasWarnings {
            get {
                return ResourceManager.GetString("ModHasWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some mods require a newer version of the installer. Please update the installer..
        /// </summary>
        public static string ModsRequireNewerVersion {
            get {
                return ResourceManager.GetString("ModsRequireNewerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the boxes for all the mods you want to install:.
        /// </summary>
        public static string ModsWillBeInstalled {
            get {
                return ResourceManager.GetString("ModsWillBeInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mods found to install.
        /// </summary>
        public static string NoModsToInstall {
            get {
                return ResourceManager.GetString("NoModsToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pick a location for the log file.
        /// </summary>
        public static string PickLogFile {
            get {
                return ResourceManager.GetString("PickLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Information.
        /// </summary>
        public static string PreinstallInformationTitle {
            get {
                return ResourceManager.GetString("PreinstallInformationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Log File.
        /// </summary>
        public static string SaveLogFile {
            get {
                return ResourceManager.GetString("SaveLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields Of Mistria Location:.
        /// </summary>
        public static string SetupMistriaLocation {
            get {
                return ResourceManager.GetString("SetupMistriaLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods Folder:.
        /// </summary>
        public static string SetupModsLocation {
            get {
                return ResourceManager.GetString("SetupModsLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall All.
        /// </summary>
        public static string UninstallButtonText {
            get {
                return ResourceManager.GetString("UninstallButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Information.
        /// </summary>
        public static string UninstallInformationTitle {
            get {
                return ResourceManager.GetString("UninstallInformationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new version of the Mods Of Mistria Installer is available, please update.
        /// </summary>
        public static string UpdateNagMessage {
            get {
                return ResourceManager.GetString("UpdateNagMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Version Available.
        /// </summary>
        public static string UpdateNagTitle {
            get {
                return ResourceManager.GetString("UpdateNagTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re running a 64-bit operating system, but have accidently downloaded the 32-bit version of MOMI. Please download the version of MOMI that does not include &quot;-x86&quot;..
        /// </summary>
        public static string Warning32Bit {
            get {
                return ResourceManager.GetString("Warning32Bit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 32-Bit Version Detected.
        /// </summary>
        public static string Warning32BitTitle {
            get {
                return ResourceManager.GetString("Warning32BitTitle", resourceCulture);
            }
        }
    }
}
