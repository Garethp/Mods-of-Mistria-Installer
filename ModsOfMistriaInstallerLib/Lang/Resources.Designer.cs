//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Garethp.ModsOfMistriaInstallerLib.Lang {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Garethp.ModsOfMistriaInstallerLib.Lang.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the manifest file..
        /// </summary>
        public static string CouldNotFindModManifest {
            get {
                return ResourceManager.GetString("CouldNotFindModManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a mods folder at {0}..
        /// </summary>
        public static string CouldNotGuessModsAt {
            get {
                return ResourceManager.GetString("CouldNotGuessModsAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating information for {0}.
        /// </summary>
        public static string GeneratingInformationForMod {
            get {
                return ResourceManager.GetString("GeneratingInformationForMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guessed Location: {0}.
        /// </summary>
        public static string GuessedMistriaAt {
            get {
                return ResourceManager.GetString("GuessedMistriaAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished.
        /// </summary>
        public static string InstallCompleted {
            get {
                return ResourceManager.GetString("InstallCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} installed in {1}.
        /// </summary>
        public static string InstalledInReporter {
            get {
                return ResourceManager.GetString("InstalledInReporter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for Mistria at {0}.
        /// </summary>
        public static string LookingForMistriaAt {
            get {
                return ResourceManager.GetString("LookingForMistriaAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest file must be named manifest.json..
        /// </summary>
        public static string ManifestFileNamedIncorrectly {
            get {
                return ResourceManager.GetString("ManifestFileNamedIncorrectly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest must contain an author..
        /// </summary>
        public static string ManifestHasNoAuthor {
            get {
                return ResourceManager.GetString("ManifestHasNoAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest must contain a name..
        /// </summary>
        public static string ManifestHasNoName {
            get {
                return ResourceManager.GetString("ManifestHasNoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest must contain a version..
        /// </summary>
        public static string ManifestHasNoVersion {
            get {
                return ResourceManager.GetString("ManifestHasNoVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Fields of Mistria location does not exist..
        /// </summary>
        public static string MistriaLocationDoesNotExist {
            get {
                return ResourceManager.GetString("MistriaLocationDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find Fields of Mistria location..
        /// </summary>
        public static string MistriaNotFound {
            get {
                return ResourceManager.GetString("MistriaNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of Mistria not found, falling back to current folder.
        /// </summary>
        public static string MistriaNotFoundFallback {
            get {
                return ResourceManager.GetString("MistriaNotFoundFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mod location does not exist..
        /// </summary>
        public static string ModDirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("ModDirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has the following warnings, but will still install:.
        /// </summary>
        public static string ModHasWarnings {
            get {
                return ResourceManager.GetString("ModHasWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod requires a newer version of the installer..
        /// </summary>
        public static string ModRequiresNewerInstaller {
            get {
                return ResourceManager.GetString("ModRequiresNewerInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods installed in {0}.
        /// </summary>
        public static string ModsInstalledInTime {
            get {
                return ResourceManager.GetString("ModsInstalledInTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping {0} for the following Errors:.
        /// </summary>
        public static string SkippingModBecauseErrors {
            get {
                return ResourceManager.GetString("SkippingModBecauseErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping {0} as it requires a newer version of the installer..
        /// </summary>
        public static string SkippingModBecauseInstallerOld {
            get {
                return ResourceManager.GetString("SkippingModBecauseInstallerOld", resourceCulture);
            }
        }
    }
}
