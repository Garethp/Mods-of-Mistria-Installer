//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Garethp.ModsOfMistriaInstallerLib.Lang {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Garethp.ModsOfMistriaInstallerLib.Lang.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the manifest file..
        /// </summary>
        public static string CouldNotFindModManifest {
            get {
                return ResourceManager.GetString("CouldNotFindModManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a mods folder at {0}..
        /// </summary>
        public static string CouldNotGuessModsAt {
            get {
                return ResourceManager.GetString("CouldNotGuessModsAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse file with message: {0}.
        /// </summary>
        public static string CouldNotParseJSON {
            get {
                return ResourceManager.GetString("CouldNotParseJSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod will only run on Windows and will not install..
        /// </summary>
        public static string ErrorModRequiresWindows {
            get {
                return ResourceManager.GetString("ErrorModRequiresWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object {0} has an invalid category {1}..
        /// </summary>
        public static string ErrorNewObjectInvalidCategory {
            get {
                return ResourceManager.GetString("ErrorNewObjectInvalidCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object {0} has no category..
        /// </summary>
        public static string ErrorNewObjectNoCategory {
            get {
                return ResourceManager.GetString("ErrorNewObjectNoCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object {0} has no data..
        /// </summary>
        public static string ErrorNewObjectNoData {
            get {
                return ResourceManager.GetString("ErrorNewObjectNoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New object has no name..
        /// </summary>
        public static string ErrorNewObjectNoName {
            get {
                return ResourceManager.GetString("ErrorNewObjectNoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outfit {0} has no animation files..
        /// </summary>
        public static string ErrorOutfitNoAnimation {
            get {
                return ResourceManager.GetString("ErrorOutfitNoAnimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outfit has no description..
        /// </summary>
        public static string ErrorOutfitNoDescription {
            get {
                return ResourceManager.GetString("ErrorOutfitNoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outfit has no name..
        /// </summary>
        public static string ErrorOutfitNoName {
            get {
                return ResourceManager.GetString("ErrorOutfitNoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outfit {0} has not defined ui_sub_category..
        /// </summary>
        public static string ErrorOutfitNoSubCategory {
            get {
                return ResourceManager.GetString("ErrorOutfitNoSubCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outfit {0} has not defined ui_slot..
        /// </summary>
        public static string ErrorOutfitNoUiSlot {
            get {
                return ResourceManager.GetString("ErrorOutfitNoUiSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outfit {0} has incorrect ui_slot. Must be one of: {1}..
        /// </summary>
        public static string ErrorOutfitUiSlotWrong {
            get {
                return ResourceManager.GetString("ErrorOutfitUiSlotWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outfit {0} has incorrect ui_sub_category. Must be one of: {1}..
        /// </summary>
        public static string ErrorOutfitUiSubCategoryWrong {
            get {
                return ResourceManager.GetString("ErrorOutfitUiSubCategoryWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured when reading the version for the mod: (0).
        /// </summary>
        public static string ErrorReadingVersionForMod {
            get {
                return ResourceManager.GetString("ErrorReadingVersionForMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shadow {0} has no Location set.
        /// </summary>
        public static string ErrorShadowHasNoLocation {
            get {
                return ResourceManager.GetString("ErrorShadowHasNoLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shadow {0} does not have a regular_sprite_name.
        /// </summary>
        public static string ErrorShadowHasNoSprite {
            get {
                return ResourceManager.GetString("ErrorShadowHasNoSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category has no store..
        /// </summary>
        public static string ErrorStoreCategoryHasNoStore {
            get {
                return ResourceManager.GetString("ErrorStoreCategoryHasNoStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category has no icon name..
        /// </summary>
        public static string ErrorStoreCategoryNoName {
            get {
                return ResourceManager.GetString("ErrorStoreCategoryNoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add item to store {0} and category {1} because it has an invalid season {2}..
        /// </summary>
        public static string ErrorStoreItemHasInvalidSeason {
            get {
                return ResourceManager.GetString("ErrorStoreItemHasInvalidSeason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item for store {0} has no category..
        /// </summary>
        public static string ErrorStoreItemHasNoCategory {
            get {
                return ResourceManager.GetString("ErrorStoreItemHasNoCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item for store {0}, category {1} has not specified an item..
        /// </summary>
        public static string ErrorStoreItemHasNoItem {
            get {
                return ResourceManager.GetString("ErrorStoreItemHasNoItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item has not been assigned to a store..
        /// </summary>
        public static string ErrorStoreItemHasNoStore {
            get {
                return ResourceManager.GetString("ErrorStoreItemHasNoStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating information for {0}.
        /// </summary>
        public static string GeneratingInformationForMod {
            get {
                return ResourceManager.GetString("GeneratingInformationForMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guessed Location: {0}.
        /// </summary>
        public static string GuessedMistriaAt {
            get {
                return ResourceManager.GetString("GuessedMistriaAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing Textures/Sprites.
        /// </summary>
        public static string ImportingSprites {
            get {
                return ResourceManager.GetString("ImportingSprites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished.
        /// </summary>
        public static string InstallCompleted {
            get {
                return ResourceManager.GetString("InstallCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} installed in {1}.
        /// </summary>
        public static string InstalledInReporter {
            get {
                return ResourceManager.GetString("InstalledInReporter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not have a value.
        /// </summary>
        public static string ItemDoesNotHaveValue {
            get {
                return ResourceManager.GetString("ItemDoesNotHaveValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for Mistria at {0}.
        /// </summary>
        public static string LookingForMistriaAt {
            get {
                return ResourceManager.GetString("LookingForMistriaAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest file must be named manifest.json..
        /// </summary>
        public static string ManifestFileNamedIncorrectly {
            get {
                return ResourceManager.GetString("ManifestFileNamedIncorrectly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest must contain an author..
        /// </summary>
        public static string ManifestHasNoAuthor {
            get {
                return ResourceManager.GetString("ManifestHasNoAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest must contain a name..
        /// </summary>
        public static string ManifestHasNoName {
            get {
                return ResourceManager.GetString("ManifestHasNoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest must contain a version..
        /// </summary>
        public static string ManifestHasNoVersion {
            get {
                return ResourceManager.GetString("ManifestHasNoVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Fields of Mistria location does not exist..
        /// </summary>
        public static string MistriaLocationDoesNotExist {
            get {
                return ResourceManager.GetString("MistriaLocationDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find Fields of Mistria location..
        /// </summary>
        public static string MistriaNotFound {
            get {
                return ResourceManager.GetString("MistriaNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of Mistria not found, falling back to current folder.
        /// </summary>
        public static string MistriaNotFoundFallback {
            get {
                return ResourceManager.GetString("MistriaNotFoundFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mod location does not exist..
        /// </summary>
        public static string ModDirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("ModDirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has the following warnings, but will still install:.
        /// </summary>
        public static string ModHasWarnings {
            get {
                return ResourceManager.GetString("ModHasWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod requires a newer version of the installer..
        /// </summary>
        public static string ModRequiresNewerInstaller {
            get {
                return ResourceManager.GetString("ModRequiresNewerInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods installed in {0}.
        /// </summary>
        public static string ModsInstalledInTime {
            get {
                return ResourceManager.GetString("ModsInstalledInTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No data was found in file.
        /// </summary>
        public static string NoDataInJSON {
            get {
                return ResourceManager.GetString("NoDataInJSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outfit file has no outfits..
        /// </summary>
        public static string OutfitFileHasNoOutfits {
            get {
                return ResourceManager.GetString("OutfitFileHasNoOutfits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to During install, MOMI will attempt to add an entry to your computers registry. For this, you&apos;ll be asked to give admin access to &quot;Registry Editor&quot; and to continue with an edit to the registry..
        /// </summary>
        public static string PreinstallWillInstallAurie {
            get {
                return ResourceManager.GetString("PreinstallWillInstallAurie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to During install, MOMI will attempt to remove an entry from the computers Registry. As part of this, you&apos;ll be asked to grant admin access to the &quot;Registry Console Tool&quot;..
        /// </summary>
        public static string PreinstallWillRemoveAurie {
            get {
                return ResourceManager.GetString("PreinstallWillRemoveAurie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading Textures/Sprites.
        /// </summary>
        public static string ReadingSprites {
            get {
                return ResourceManager.GetString("ReadingSprites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping {0} for the following Errors:.
        /// </summary>
        public static string SkippingModBecauseErrors {
            get {
                return ResourceManager.GetString("SkippingModBecauseErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping {0} as it requires a newer version of the installer..
        /// </summary>
        public static string SkippingModBecauseInstallerOld {
            get {
                return ResourceManager.GetString("SkippingModBecauseInstallerOld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} points to a sprite at {1} but that file does not exist.
        /// </summary>
        public static string SpriteFileDoesNotExist {
            get {
                return ResourceManager.GetString("SpriteFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite file has no sprites..
        /// </summary>
        public static string SpriteFileHasNoSprites {
            get {
                return ResourceManager.GetString("SpriteFileHasNoSprites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} points to a sprite folder at {1} but that folder does not exist.
        /// </summary>
        public static string SpriteFolderDoesNotExist {
            get {
                return ResourceManager.GetString("SpriteFolderDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} points to a sprite folder at {1} but that directory is empty.
        /// </summary>
        public static string SpriteFolderIsEmpty {
            get {
                return ResourceManager.GetString("SpriteFolderIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store file has no categories or items..
        /// </summary>
        public static string StoreFileHasNoData {
            get {
                return ResourceManager.GetString("StoreFileHasNoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tileset file has no tilesets..
        /// </summary>
        public static string TilesetsFileEmpty {
            get {
                return ResourceManager.GetString("TilesetsFileEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Items file has no items..
        /// </summary>
        public static string WarningItemFileHasNoItems {
            get {
                return ResourceManager.GetString("WarningItemFileHasNoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Objects file has no objects in it..
        /// </summary>
        public static string WarningObjectFileHasNoObjects {
            get {
                return ResourceManager.GetString("WarningObjectFileHasNoObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shadow file has no shadows..
        /// </summary>
        public static string WarningShadowFileNoShadows {
            get {
                return ResourceManager.GetString("WarningShadowFileNoShadows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing Textures/Sprites.
        /// </summary>
        public static string WritingSprites {
            get {
                return ResourceManager.GetString("WritingSprites", resourceCulture);
            }
        }
    }
}
